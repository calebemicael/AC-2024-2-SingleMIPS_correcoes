$date
	Sat Feb 15 23:13:49 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Simulacao $end
$var wire 1 ! Zero $end
$var wire 32 " ReadData2 [31:0] $end
$var wire 32 # ReadData1 [31:0] $end
$var wire 32 $ ALUResult [31:0] $end
$var reg 4 % ALUOperation [3:0] $end
$var reg 5 & ReadRegister1 [4:0] $end
$var reg 5 ' ReadRegister2 [4:0] $end
$var reg 1 ( RegWrite $end
$var reg 32 ) WriteData [31:0] $end
$var reg 5 * WriteRegister [4:0] $end
$scope module alu $end
$var wire 4 + ALUOperation [3:0] $end
$var wire 1 ! Zero $end
$var wire 32 , B [31:0] $end
$var wire 32 - A [31:0] $end
$var reg 32 . ALUResult [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 32 / ReadData1 [31:0] $end
$var wire 32 0 ReadData2 [31:0] $end
$var wire 5 1 ReadRegister1 [4:0] $end
$var wire 5 2 ReadRegister2 [4:0] $end
$var wire 1 ( RegWrite $end
$var wire 32 3 WriteData [31:0] $end
$var wire 5 4 WriteRegister [4:0] $end
$var integer 32 5 i [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 6 \registers[0] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 7 \registers[1] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 8 \registers[2] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 9 \registers[3] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 : \registers[4] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 ; \registers[5] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 < \registers[6] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 = \registers[7] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 > \registers[8] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 ? \registers[9] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 @ \registers[10] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 A \registers[11] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 B \registers[12] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 C \registers[13] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 D \registers[14] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 E \registers[15] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 F \registers[16] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 G \registers[17] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 H \registers[18] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 I \registers[19] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 J \registers[20] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 K \registers[21] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 L \registers[22] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 M \registers[23] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 N \registers[24] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 O \registers[25] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 P \registers[26] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 Q \registers[27] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 R \registers[28] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 S \registers[29] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 T \registers[30] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 U \registers[31] [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b100000 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
1!
$end
#10
b1010 7
b1010 )
b1010 3
b1 *
b1 4
1(
#20
b10100 8
b10100 )
b10100 3
b10 *
b10 4
#30
b10100 "
b10100 ,
b10100 0
b10 '
b10 2
b1010 #
b1010 -
b1010 /
b1 &
b1 1
0(
#40
0!
b11110 $
b11110 .
b10 %
b10 +
#50
b11111111111111111111111111110110 $
b11111111111111111111111111110110 .
b110 %
b110 +
#60
1!
b0 $
b0 .
b0 %
b0 +
#70
0!
b11111111111111111111111111110110 $
b11111111111111111111111111110110 .
b110 %
b110 +
