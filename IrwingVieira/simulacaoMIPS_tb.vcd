$date
	Sun Feb 09 22:55:07 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module simulacaoMIPS_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 # saidaMuxULA [31:0] $end
$var wire 32 $ saidaMuxData [31:0] $end
$var wire 5 % saidaMux5Bit [4:0] $end
$var wire 1 & regWrite $end
$var wire 32 ' readData2 [31:0] $end
$var wire 32 ( readData1 [31:0] $end
$var wire 32 ) offSet32bit [31:0] $end
$var wire 1 * memWrite $end
$var wire 1 + memRead $end
$var wire 1 , jump $end
$var wire 32 - instruction [31:0] $end
$var wire 32 . dataRead [31:0] $end
$var wire 1 / andMulti $end
$var wire 32 0 aluResult [31:0] $end
$var wire 1 1 ZeroALU $end
$var wire 1 2 RegDst $end
$var wire 1 3 MemtoReg $end
$var wire 1 4 Branch $end
$var wire 2 5 AluOp [1:0] $end
$var wire 4 6 AluControl [3:0] $end
$var wire 1 7 ALUSrc $end
$scope module armazenamento $end
$var wire 1 ! Clk $end
$var wire 32 8 writeData [31:0] $end
$var wire 32 9 readData [31:0] $end
$var wire 32 : address [31:0] $end
$var wire 1 * MemWrite $end
$var wire 1 + MemRead $end
$var integer 32 ; i [31:0] $end
$upscope $end
$scope module controlaULA $end
$var wire 2 < ALUOp [1:0] $end
$var wire 6 = FunctionField [5:0] $end
$var reg 4 > saidaALU [3:0] $end
$upscope $end
$scope module extensor $end
$var wire 16 ? in [15:0] $end
$var wire 32 @ out [31:0] $end
$upscope $end
$scope module moduloBusca $end
$var wire 1 ! clk $end
$var wire 26 A jumpAddress [25:0] $end
$var wire 1 " reset $end
$var wire 1 1 zeroALU $end
$var wire 32 B pc_incrementado [31:0] $end
$var wire 1 , jumpSignal $end
$var wire 32 C instrucao [31:0] $end
$var wire 32 D enderecoJump [31:0] $end
$var wire 32 E enderecoBranch [31:0] $end
$var wire 1 4 branch $end
$var wire 1 / andMuxSignal $end
$var reg 32 F pc [31:0] $end
$scope module branchEqual $end
$var wire 1 / andMux $end
$var wire 32 G currentPC [31:0] $end
$var wire 16 H offset [15:0] $end
$var wire 32 I saida [31:0] $end
$var wire 32 J extendedOffset [31:0] $end
$var wire 32 K deslocatedOffset [31:0] $end
$var wire 1 4 branchSignal $end
$var wire 1 1 aluZero $end
$scope module deslocamento $end
$var wire 32 L out [31:0] $end
$var wire 32 M in [31:0] $end
$upscope $end
$scope module extensao $end
$var wire 16 N in [15:0] $end
$var wire 32 O out [31:0] $end
$upscope $end
$scope module somador $end
$var wire 32 P a [31:0] $end
$var wire 32 Q b [31:0] $end
$var wire 32 R sum [31:0] $end
$upscope $end
$upscope $end
$scope module memoria $end
$var wire 32 S addr [31:0] $end
$var wire 32 T instrucao [31:0] $end
$upscope $end
$scope module opearacaoJump $end
$var wire 32 U actualPC [31:0] $end
$var wire 26 V jumpAddress [25:0] $end
$var wire 28 W shiftedJump [27:0] $end
$var wire 32 X newPC [31:0] $end
$var wire 32 Y incrementedPC [31:0] $end
$scope module somaQuatro $end
$var wire 32 Z in [31:0] $end
$var wire 32 [ out [31:0] $end
$upscope $end
$upscope $end
$scope module somador $end
$var wire 32 \ in [31:0] $end
$var wire 32 ] out [31:0] $end
$upscope $end
$upscope $end
$scope module mux5bit $end
$var wire 5 ^ entradaA [4:0] $end
$var wire 5 _ entradaB [4:0] $end
$var wire 1 2 seletora $end
$var wire 5 ` saida [4:0] $end
$upscope $end
$scope module muxData $end
$var wire 32 a entradaA [31:0] $end
$var wire 1 3 seletora $end
$var wire 32 b saida [31:0] $end
$var wire 32 c entradaB [31:0] $end
$upscope $end
$scope module muxULA $end
$var wire 32 d entradaA [31:0] $end
$var wire 1 7 seletora $end
$var wire 32 e saida [31:0] $end
$var wire 32 f entradaB [31:0] $end
$upscope $end
$scope module registra $end
$var wire 1 ! Clk $end
$var wire 32 g ReadData1 [31:0] $end
$var wire 32 h ReadData2 [31:0] $end
$var wire 5 i ReadRegister1 [4:0] $end
$var wire 5 j ReadRegister2 [4:0] $end
$var wire 32 k WriteData [31:0] $end
$var wire 5 l WriteRegister [4:0] $end
$var wire 1 & RegWrite $end
$var integer 32 m i [31:0] $end
$upscope $end
$scope module ula $end
$var wire 32 n A [31:0] $end
$var wire 4 o ALUOperation [3:0] $end
$var wire 32 p B [31:0] $end
$var wire 1 1 Zero $end
$var reg 32 q ALUResult [31:0] $end
$upscope $end
$scope module unidadeControle $end
$var wire 6 r opCode [5:0] $end
$var reg 1 s ALUOp0 $end
$var reg 1 t ALUOp1 $end
$var reg 1 7 ALUSrc $end
$var reg 1 4 Branch $end
$var reg 1 + MemRead $end
$var reg 1 * MemWrite $end
$var reg 1 3 MemtoReg $end
$var reg 1 2 RegDst $end
$var reg 1 & RegWrite $end
$var reg 1 , jump $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0t
0s
b1000 r
b1 q
b1 p
b10 o
b0 n
b100000 m
b1000 l
b1 k
b1000 j
b0 i
b0 h
b0 g
b0 f
b1 e
b1 d
b1 c
b1 b
b0 a
b1000 `
b1000 _
b0 ^
b100 ]
b0 \
b100 [
b0 Z
b100 Y
b1000000000000000000100 X
b1000000000000000000100 W
b10000000000000000001 V
b0 U
b100000000010000000000000000001 T
b0 S
b100 R
b0 Q
b100 P
b1 O
b1 N
b1 M
b100 L
b100 K
b1 J
b100 I
b1 H
b0 G
b0 F
b100 E
b1000000000000000000100 D
b100000000010000000000000000001 C
b100 B
b10000000000000000001 A
b1 @
b1 ?
b10 >
b1 =
b0 <
b100000000 ;
b1 :
b0 9
b0 8
17
b10 6
b0 5
04
03
02
01
b1 0
0/
b0 .
b100000000010000000000000000001 -
0,
0+
0*
b1 )
b0 (
b0 '
1&
b1000 %
b1 $
b1 #
1"
0!
$end
#5000
b1 '
b1 8
b1 f
b1 h
1!
#10000
0!
0"
#15000
b10 $
b10 b
b10 k
b10 0
b10 :
b10 c
b10 q
b1000 K
b1000 L
b1000 P
b1001 %
b1001 `
b1001 l
b10 #
b10 e
b10 p
b10 J
b10 M
b10 O
b10 H
b10 N
b1001 _
b10 )
b10 @
b10 d
b10 ?
b10 =
b0 '
b0 8
b0 f
b0 h
b1001 j
b1001000000000000001000 D
b1001000000000000001000 X
b1001000000000000001000 W
b10010000000000000010 A
b10010000000000000010 V
b100000000010010000000000000010 -
b100000000010010000000000000010 C
b100000000010010000000000000010 T
b1100 E
b1100 I
b1100 R
b1000 Y
b1000 [
b1000 B
b1000 ]
b100 F
b100 G
b100 Q
b100 S
b100 U
b100 Z
b100 \
1!
#20000
0!
#25000
b1010 %
b1010 `
b1010 l
b11 $
b11 b
b11 k
b10100000010000000 K
b10100000010000000 L
b10100000010000000 P
b10 5
b10 <
1t
07
12
b11 0
b11 :
b11 c
b11 q
b101000000100000 J
b101000000100000 M
b101000000100000 O
b101000000100000 H
b101000000100000 N
b1010 ^
b101000000100000 )
b101000000100000 @
b101000000100000 d
b101000000100000 ?
b0 r
b100000 =
b1 (
b1 g
b1 n
b1000 i
b100001001010100000010000000 D
b100001001010100000010000000 X
b100001001010100000010000000 W
b1000010010101000000100000 A
b1000010010101000000100000 V
b1000010010101000000100000 -
b1000010010101000000100000 C
b1000010010101000000100000 T
b10 '
b10 8
b10 f
b10 h
b10100000010001000 E
b10100000010001000 I
b10100000010001000 R
b1100 Y
b1100 [
b1100 B
b1100 ]
b1000 F
b1000 G
b1000 Q
b1000 S
b1000 U
b1000 Z
b1000 \
1!
#30000
0!
#35000
11
b0 $
b0 b
b0 k
b0 K
b0 L
b0 P
b0 %
b0 `
b0 l
b0 5
b0 <
0t
1*
0&
13
17
b10 6
b10 >
b10 o
b0 #
b0 e
b0 p
b0 0
b0 :
b0 c
b0 q
b0 J
b0 M
b0 O
b0 H
b0 N
b1010 _
b0 ^
b0 )
b0 @
b0 d
b0 ?
b101011 r
b0 =
b11 '
b11 8
b11 f
b11 h
b1010 j
b0 (
b0 g
b0 n
b0 i
b1010000000000000000000 D
b1010000000000000000000 X
b1010000000000000000000 W
b10100000000000000000 A
b10100000000000000000 V
b10101100000010100000000000000000 -
b10101100000010100000000000000000 C
b10101100000010100000000000000000 T
b1100 E
b1100 I
b1100 R
b10000 Y
b10000 [
b10000 B
b10000 ]
b1100 F
b1100 G
b1100 Q
b1100 S
b1100 U
b1100 Z
b1100 \
1!
#40000
0!
#45000
b110 6
b110 >
b110 o
01
b1000000 K
b1000000 L
b1000000 P
b10 #
b10 e
b10 p
b1 5
b1 <
1s
14
0*
07
b11111111111111111111111111111111 0
b11111111111111111111111111111111 :
b11111111111111111111111111111111 c
b11111111111111111111111111111111 q
b10000 J
b10000 M
b10000 O
b10000 H
b10000 N
b1001 _
b10000 )
b10000 @
b10000 d
b10000 ?
b100 r
b10000 =
b10 '
b10 8
b10 f
b10 h
b1001 j
b1 (
b1 g
b1 n
b1000 i
b100001001000000000001000000 D
b100001001000000000001000000 X
b100001001000000000001000000 W
b1000010010000000000010000 A
b1000010010000000000010000 V
b10001000010010000000000010000 -
b10001000010010000000000010000 C
b10001000010010000000000010000 T
b1010000 E
b1010000 I
b1010000 R
b10100 Y
b10100 [
b10100 B
b10100 ]
b10000 F
b10000 G
b10000 Q
b10000 S
b10000 U
b10000 Z
b10000 \
1!
#50000
0!
#55000
11
b10 6
b10 >
b10 o
b10000 %
b10000 `
b10000 l
b0 K
b0 L
b0 P
1,
b0 5
b0 <
0s
04
03
02
b0 #
b0 e
b0 p
b0 0
b0 :
b0 c
b0 q
b0 J
b0 M
b0 O
b0 H
b0 N
b10000 _
b0 )
b0 @
b0 d
b0 ?
b10 r
b0 =
b0 '
b0 8
b0 f
b0 h
b10000 j
b0 (
b0 g
b0 n
b0 i
b10000000000000000000000 D
b10000000000000000000000 X
b10000000000000000000000 W
b100000000000000000000 A
b100000000000000000000 V
b1000000100000000000000000000 -
b1000000100000000000000000000 C
b1000000100000000000000000000 T
b10100 E
b10100 I
b10100 R
b11000 Y
b11000 [
b11000 B
b11000 ]
b10100 F
b10100 G
b10100 Q
b10100 S
b10100 U
b10100 Z
b10100 \
1!
#60000
0!
#65000
01
b1 $
b1 b
b1 k
b1 0
b1 :
b1 c
b1 q
b100 K
b100 L
b100 P
b1000 %
b1000 `
b1000 l
0,
1&
17
b1 #
b1 e
b1 p
b1 J
b1 M
b1 O
b1 H
b1 N
b1000 _
b1 )
b1 @
b1 d
b1 ?
b1000 r
b1 =
b1 '
b1 8
b1 f
b1 h
b1000 j
b1000000000000000000100 D
b1000000000000000000100 X
b1000000000000000000100 W
b10000000000000000001 A
b10000000000000000001 V
b100000000010000000000000000001 -
b100000000010000000000000000001 C
b100000000010000000000000000001 T
b10000000000000000000100 E
b10000000000000000000100 I
b10000000000000000000100 R
b10000000000000000000100 Y
b10000000000000000000100 [
b10000000000000000000100 B
b10000000000000000000100 ]
b10000000000000000000000 F
b10000000000000000000000 G
b10000000000000000000000 Q
b10000000000000000000000 S
b10000000000000000000000 U
b10000000000000000000000 Z
b10000000000000000000000 \
1!
#70000
0!
#75000
b10 $
b10 b
b10 k
b10 0
b10 :
b10 c
b10 q
b1000 K
b1000 L
b1000 P
b1001 %
b1001 `
b1001 l
b10 #
b10 e
b10 p
b10 J
b10 M
b10 O
b10 H
b10 N
b1001 _
b10 )
b10 @
b10 d
b10 ?
b10 =
b10 '
b10 8
b10 f
b10 h
b1001 j
b1001000000000000001000 D
b1001000000000000001000 X
b1001000000000000001000 W
b10010000000000000010 A
b10010000000000000010 V
b100000000010010000000000000010 -
b100000000010010000000000000010 C
b100000000010010000000000000010 T
b10000000000000000001100 E
b10000000000000000001100 I
b10000000000000000001100 R
b10000000000000000001000 Y
b10000000000000000001000 [
b10000000000000000001000 B
b10000000000000000001000 ]
b10000000000000000000100 F
b10000000000000000000100 G
b10000000000000000000100 Q
b10000000000000000000100 S
b10000000000000000000100 U
b10000000000000000000100 Z
b10000000000000000000100 \
1!
#80000
0!
#85000
b1010 %
b1010 `
b1010 l
b11 $
b11 b
b11 k
b10100000010000000 K
b10100000010000000 L
b10100000010000000 P
b10 5
b10 <
1t
07
12
b11 0
b11 :
b11 c
b11 q
b101000000100000 J
b101000000100000 M
b101000000100000 O
b101000000100000 H
b101000000100000 N
b1010 ^
b101000000100000 )
b101000000100000 @
b101000000100000 d
b101000000100000 ?
b0 r
b100000 =
b1 (
b1 g
b1 n
b1000 i
b100001001010100000010000000 D
b100001001010100000010000000 X
b100001001010100000010000000 W
b1000010010101000000100000 A
b1000010010101000000100000 V
b1000010010101000000100000 -
b1000010010101000000100000 C
b1000010010101000000100000 T
b10000010100000010001000 E
b10000010100000010001000 I
b10000010100000010001000 R
b10000000000000000001100 Y
b10000000000000000001100 [
b10000000000000000001100 B
b10000000000000000001100 ]
b10000000000000000001000 F
b10000000000000000001000 G
b10000000000000000001000 Q
b10000000000000000001000 S
b10000000000000000001000 U
b10000000000000000001000 Z
b10000000000000000001000 \
1!
#90000
0!
#95000
11
b0 $
b0 b
b0 k
b0 K
b0 L
b0 P
b0 %
b0 `
b0 l
b0 5
b0 <
0t
1*
0&
13
17
b10 6
b10 >
b10 o
b0 #
b0 e
b0 p
b0 0
b0 :
b0 c
b0 q
b0 J
b0 M
b0 O
b0 H
b0 N
b1010 _
b0 ^
b0 )
b0 @
b0 d
b0 ?
b101011 r
b0 =
b11 '
b11 8
b11 f
b11 h
b1010 j
b0 (
b0 g
b0 n
b0 i
b1010000000000000000000 D
b1010000000000000000000 X
b1010000000000000000000 W
b10100000000000000000 A
b10100000000000000000 V
b10101100000010100000000000000000 -
b10101100000010100000000000000000 C
b10101100000010100000000000000000 T
b10000000000000000001100 E
b10000000000000000001100 I
b10000000000000000001100 R
b10000000000000000010000 Y
b10000000000000000010000 [
b10000000000000000010000 B
b10000000000000000010000 ]
b10000000000000000001100 F
b10000000000000000001100 G
b10000000000000000001100 Q
b10000000000000000001100 S
b10000000000000000001100 U
b10000000000000000001100 Z
b10000000000000000001100 \
1!
#100000
0!
#105000
b110 6
b110 >
b110 o
01
b1000000 K
b1000000 L
b1000000 P
b10 #
b10 e
b10 p
b1 5
b1 <
1s
14
0*
07
b11111111111111111111111111111111 0
b11111111111111111111111111111111 :
b11111111111111111111111111111111 c
b11111111111111111111111111111111 q
b10000 J
b10000 M
b10000 O
b10000 H
b10000 N
b1001 _
b10000 )
b10000 @
b10000 d
b10000 ?
b100 r
b10000 =
b10 '
b10 8
b10 f
b10 h
b1001 j
b1 (
b1 g
b1 n
b1000 i
b100001001000000000001000000 D
b100001001000000000001000000 X
b100001001000000000001000000 W
b1000010010000000000010000 A
b1000010010000000000010000 V
b10001000010010000000000010000 -
b10001000010010000000000010000 C
b10001000010010000000000010000 T
b10000000000000001010000 E
b10000000000000001010000 I
b10000000000000001010000 R
b10000000000000000010100 Y
b10000000000000000010100 [
b10000000000000000010100 B
b10000000000000000010100 ]
b10000000000000000010000 F
b10000000000000000010000 G
b10000000000000000010000 Q
b10000000000000000010000 S
b10000000000000000010000 U
b10000000000000000010000 Z
b10000000000000000010000 \
1!
#110000
0!
