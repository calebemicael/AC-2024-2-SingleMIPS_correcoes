$date
	Sat Apr 12 20:21:40 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module MIPS_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module dut $end
$var wire 28 # JumpshiftedOffset [27:0] $end
$var wire 32 $ beqAdrs [31:0] $end
$var wire 32 % branchAddress [31:0] $end
$var wire 1 ! clk $end
$var wire 10 & ctrl_signals [9:0] $end
$var wire 1 " reset $end
$var wire 1 ' zero $end
$var wire 32 ( pcIncrementado [31:0] $end
$var wire 32 ) newPcAdrs [31:0] $end
$var wire 32 * instrucao [31:0] $end
$scope module M_beq $end
$var wire 32 + o_output [31:0] $end
$var wire 1 , sel $end
$var wire 32 - true [31:0] $end
$var wire 32 . false [31:0] $end
$upscope $end
$scope module M_jump $end
$var wire 32 / false [31:0] $end
$var wire 32 0 o_output [31:0] $end
$var wire 1 1 sel $end
$var wire 32 2 true [31:0] $end
$upscope $end
$scope module Mux_beq $end
$var wire 64 3 Entradas [63:0] $end
$var wire 32 4 Saida [31:0] $end
$var wire 1 5 selector $end
$var parameter 32 6 DATA_WIDTH $end
$var parameter 32 7 SEL_WIDTH $end
$upscope $end
$scope module unidade_fetch $end
$var wire 1 ! clk $end
$var wire 32 8 pcSet [31:0] $end
$var wire 1 " reset $end
$var wire 32 9 pc_incrementado [31:0] $end
$var wire 32 : instrucao [31:0] $end
$var reg 32 ; pc [31:0] $end
$scope module memoria $end
$var wire 32 < addr [31:0] $end
$var wire 32 = instrucao [31:0] $end
$upscope $end
$scope module somador $end
$var wire 32 > in [31:0] $end
$var wire 32 ? out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 7
b100000 6
$end
#0
$dumpvars
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
x5
bx 4
bzxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
bxzzzzzzzzzzzzzzzzzzzzzzzzzzzz 2
01
bx 0
bx /
bx .
bz -
0,
bx +
bx *
bx )
bx (
z'
bz &
bz %
bx $
bz #
0"
0!
$end
#5
b100000000010000000000000001010 *
b100000000010000000000000001010 :
b100000000010000000000000001010 =
b0zzzzzzzzzzzzzzzzzzzzzzzzzzzz 2
bz00000000000000000000000000000100 3
b100 (
b100 .
b100 9
b100 ?
b0 ;
b0 <
b0 >
1"
1!
#10
0"
0!
#15
bx *
bx :
bx =
bxzzzzzzzzzzzzzzzzzzzzzzzzzzzz 2
bzxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
bx (
bx .
bx 9
bx ?
bx ;
bx <
bx >
1!
#20
0!
#25
1!
#30
0!
#35
1!
#40
0!
#45
1!
#50
0!
#55
1!
#60
0!
#65
1!
#70
0!
#75
1!
#80
0!
#85
1!
#90
0!
#95
1!
#100
0!
#105
1!
#110
0!
