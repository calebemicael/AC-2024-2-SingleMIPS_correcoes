$date
	Fri Apr 11 09:42:46 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Simulacao $end
$var wire 32 ! signExtendedOffset [31:0] $end
$var wire 32 " shiftedOffset [31:0] $end
$var wire 28 # shiftedJump [27:0] $end
$var wire 32 $ pcPlus4 [31:0] $end
$var wire 32 % nextPC [31:0] $end
$var wire 32 & memoryReadData [31:0] $end
$var wire 32 ' instrucao [31:0] $end
$var wire 32 ( inputBALU [31:0] $end
$var wire 32 ) branchAddress [31:0] $end
$var wire 1 * Zero $end
$var wire 5 + WriteRegister [4:0] $end
$var wire 32 , WriteData [31:0] $end
$var wire 1 - RegWrite $end
$var wire 1 . RegDst $end
$var wire 32 / ReadData2 [31:0] $end
$var wire 32 0 ReadData1 [31:0] $end
$var wire 32 1 MuxBranchRes [31:0] $end
$var wire 1 2 MemtoReg $end
$var wire 1 3 MemWrite $end
$var wire 1 4 MemRead $end
$var wire 32 5 JumpAddress [31:0] $end
$var wire 1 6 Jump $end
$var wire 1 7 Branch $end
$var wire 1 8 ALUSrc $end
$var wire 32 9 ALUResult [31:0] $end
$var wire 4 : ALUOperation [3:0] $end
$var wire 2 ; ALUOp [1:0] $end
$var reg 32 < PC [31:0] $end
$var reg 1 = clk $end
$var reg 1 > reset $end
$var integer 32 ? i [31:0] $end
$scope module adder_beq $end
$var wire 32 @ sum [31:0] $end
$var wire 32 A b [31:0] $end
$var wire 32 B a [31:0] $end
$upscope $end
$scope module alu_ctrl $end
$var wire 6 C funct [5:0] $end
$var wire 2 D ALUOp [1:0] $end
$var reg 4 E ALUOperation [3:0] $end
$upscope $end
$scope module alu_mem $end
$var wire 4 F ALUOperation [3:0] $end
$var wire 1 * Zero $end
$var wire 32 G B [31:0] $end
$var wire 32 H A [31:0] $end
$var reg 32 I ALUResult [31:0] $end
$upscope $end
$scope module concat_jump $end
$var wire 4 J pcPlus4 [3:0] $end
$var wire 28 K instruShift [27:0] $end
$var wire 32 L JumpAddress [31:0] $end
$upscope $end
$scope module datamemory $end
$var wire 32 M address [31:0] $end
$var wire 1 = clk $end
$var wire 32 N writeData [31:0] $end
$var wire 32 O readData [31:0] $end
$var wire 1 3 MemWrite $end
$var wire 1 4 MemRead $end
$var integer 32 P i [31:0] $end
$upscope $end
$scope module memoria $end
$var wire 32 Q addr [31:0] $end
$var wire 32 R instrucao [31:0] $end
$upscope $end
$scope module mux_beq $end
$var wire 32 S A [31:0] $end
$var wire 1 T sel $end
$var wire 32 U result [31:0] $end
$var wire 32 V B [31:0] $end
$upscope $end
$scope module mux_jump $end
$var wire 32 W A [31:0] $end
$var wire 32 X B [31:0] $end
$var wire 1 6 sel $end
$var wire 32 Y result [31:0] $end
$upscope $end
$scope module mux_mem $end
$var wire 1 8 sel $end
$var wire 32 Z result [31:0] $end
$var wire 32 [ B [31:0] $end
$var wire 32 \ A [31:0] $end
$upscope $end
$scope module mux_reg $end
$var wire 5 ] A [4:0] $end
$var wire 5 ^ B [4:0] $end
$var wire 1 . sel $end
$var wire 5 _ result [4:0] $end
$upscope $end
$scope module mux_wdata $end
$var wire 32 ` A [31:0] $end
$var wire 32 a B [31:0] $end
$var wire 1 2 sel $end
$var wire 32 b result [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 32 c ReadData1 [31:0] $end
$var wire 32 d ReadData2 [31:0] $end
$var wire 5 e ReadRegister1 [4:0] $end
$var wire 5 f ReadRegister2 [4:0] $end
$var wire 32 g WriteData [31:0] $end
$var wire 5 h WriteRegister [4:0] $end
$var wire 1 = clk $end
$var wire 1 - RegWrite $end
$var integer 32 i i [31:0] $end
$upscope $end
$scope module shiftLeft $end
$var wire 32 j out [31:0] $end
$var wire 32 k in [31:0] $end
$upscope $end
$scope module shiftLeft_jump $end
$var wire 26 l in [25:0] $end
$var wire 28 m out [27:0] $end
$upscope $end
$scope module signExtend $end
$var wire 16 n in [15:0] $end
$var wire 32 o out [31:0] $end
$upscope $end
$scope module somador $end
$var wire 32 p in [31:0] $end
$var wire 32 q out [31:0] $end
$upscope $end
$scope module uc $end
$var wire 32 r instruction [31:0] $end
$var reg 2 s ALUOp [1:0] $end
$var reg 1 8 ALUSrc $end
$var reg 1 7 Branch $end
$var reg 1 6 Jump $end
$var reg 1 4 MemRead $end
$var reg 1 3 MemWrite $end
$var reg 1 2 MemtoReg $end
$var reg 1 . RegDst $end
$var reg 1 - RegWrite $end
$var reg 6 t opcode [5:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 u \registers[0] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 v \registers[1] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 w \registers[2] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 x \registers[3] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 y \registers[4] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 z \registers[5] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 { \registers[6] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 | \registers[7] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 } \registers[8] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 ~ \registers[9] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 !" \registers[10] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 "" \registers[11] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 #" \registers[12] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 $" \registers[13] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 %" \registers[14] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 &" \registers[15] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 '" \registers[16] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 (" \registers[17] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 )" \registers[18] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 *" \registers[19] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 +" \registers[20] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 ," \registers[21] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 -" \registers[22] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 ." \registers[23] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 /" \registers[24] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 0" \registers[25] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 1" \registers[26] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 2" \registers[27] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 3" \registers[28] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 4" \registers[29] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 5" \registers[30] [31:0] $end
$upscope $end
$upscope $end
$scope module Simulacao $end
$scope module regfile $end
$var reg 32 6" \registers[31] [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx00 m
bx l
bx k
bx00 j
b100000 i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx00 W
bx V
bx U
xT
bx S
bx R
bx Q
b100000000 P
bx O
bx N
bx M
bx00 L
bx00 K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx00 A
bx @
b100000 ?
0>
0=
bx <
bx ;
bx :
bx 9
x8
x7
x6
bx00 5
x4
x3
x2
bx 1
bx 0
bx /
x.
x-
bx ,
bx +
x*
bx )
bx (
bx '
bx &
bx %
bx $
bx00 #
bx00 "
bx !
$end
#5
1=
#10
b100 %
b100 Y
b100 1
b100 U
b100 X
0*
b1100 )
b1100 @
b1100 S
0T
b0 &
b0 O
b0 `
b10 ,
b10 b
b10 :
b10 E
b10 F
b10 9
b10 I
b10 M
b10 a
b10 g
b1000 "
b1000 A
b1000 j
b10 (
b10 G
b10 Z
b1000 +
b1000 _
b1000 h
06
b0 ;
b0 D
b0 s
07
03
04
1-
02
18
0.
b1000 t
b1000000000000000001000 #
b1000000000000000001000 K
b1000000000000000001000 m
b10000000000000000010 l
b10 C
b0 /
b0 N
b0 [
b0 d
b1000 f
b0 0
b0 H
b0 c
b0 e
b10 !
b10 \
b10 k
b10 o
b10 n
b1000 ^
b0 ]
b100000000010000000000000000010 '
b100000000010000000000000000010 R
b100000000010000000000000000010 r
b1000000000000000001000 5
b1000000000000000001000 L
b1000000000000000001000 W
b0 J
b100 $
b100 B
b100 V
b100 q
b0 <
b0 Q
b0 p
0=
1>
#15
b10 }
b10 /
b10 N
b10 [
b10 d
1=
#20
0=
0>
#25
b10000 ,
b10000 b
b10000 9
b10000 I
b10000 M
b10000 a
b10000 g
b1000000 "
b1000000 A
b1000000 j
b10000 (
b10000 G
b10000 Z
b1001 +
b1001 _
b1001 h
1-
18
b1001000000000001000000 5
b1001000000000001000000 L
b1001000000000001000000 W
b1001000000000001000000 #
b1001000000000001000000 K
b1001000000000001000000 m
b10010000000000010000 l
b10000 C
b0 /
b0 N
b0 [
b0 d
b1001 f
b10000 !
b10000 \
b10000 k
b10000 o
b10000 n
b1001 ^
b1000 %
b1000 Y
b100000000010010000000000010000 '
b100000000010010000000000010000 R
b100000000010010000000000010000 r
b1000 1
b1000 U
b1000 X
b10 }
b1001000 )
b1001000 @
b1001000 S
b1000 $
b1000 B
b1000 V
b1000 q
b100 <
b100 Q
b100 p
1=
#30
0=
#35
b10010 ,
b10010 b
b10010 9
b10010 I
b10010 M
b10010 a
b10010 g
b1001000 "
b1001000 A
b1001000 j
b10010 (
b10010 G
b10010 Z
b1011 +
b1011 _
b1011 h
1-
18
b1011000000000001001000 5
b1011000000000001001000 L
b1011000000000001001000 W
b1011000000000001001000 #
b1011000000000001001000 K
b1011000000000001001000 m
b10110000000000010010 l
b10010 C
b1011 f
b10010 !
b10010 \
b10010 k
b10010 o
b10010 n
b1011 ^
b1100 %
b1100 Y
b100000000010110000000000010010 '
b100000000010110000000000010010 R
b100000000010110000000000010010 r
b1100 1
b1100 U
b1100 X
b10000 ~
b0 /
b0 N
b0 [
b0 d
b1010100 )
b1010100 @
b1010100 S
b1100 $
b1100 B
b1100 V
b1100 q
b1000 <
b1000 Q
b1000 p
1=
#40
0=
#45
b10100000010000000 "
b10100000010000000 A
b10100000010000000 j
b10 (
b10 G
b10 Z
b1010 +
b1010 _
b1010 h
1.
b10 ;
b10 D
b10 s
1-
08
b0 t
b100101000010100000010000000 5
b100101000010100000010000000 L
b100101000010100000010000000 W
b100101000010100000010000000 #
b100101000010100000010000000 K
b100101000010100000010000000 m
b1001010000101000000100000 l
b100000 C
b1000 f
b10000 0
b10000 H
b10000 c
b1001 e
b101000000100000 !
b101000000100000 \
b101000000100000 k
b101000000100000 o
b101000000100000 n
b1000 ^
b1010 ]
b10000 %
b10000 Y
b1001010000101000000100000 '
b1001010000101000000100000 R
b1001010000101000000100000 r
b10000 1
b10000 U
b10000 X
b10010 ""
b10 /
b10 N
b10 [
b10 d
b10100000010010000 )
b10100000010010000 @
b10100000010010000 S
b10000 $
b10000 B
b10000 V
b10000 q
b1100 <
b1100 Q
b1100 p
1=
#50
0=
#55
1T
1*
b0 ,
b0 b
b110 :
b110 E
b110 F
b10010 (
b10010 G
b10010 Z
b0 9
b0 I
b0 M
b0 a
b0 g
b0 "
b0 A
b0 j
17
b1 ;
b1 D
b1 s
0-
0.
b100 t
b101101010000000000000000000 5
b101101010000000000000000000 L
b101101010000000000000000000 W
b101101010000000000000000000 #
b101101010000000000000000000 K
b101101010000000000000000000 m
b1011010100000000000000000 l
b0 C
b10010 /
b10010 N
b10010 [
b10010 d
b1010 f
b10010 0
b10010 H
b10010 c
b1011 e
b0 !
b0 \
b0 k
b0 o
b0 n
b1010 ^
b0 ]
b10100 %
b10100 Y
b10001011010100000000000000000 '
b10001011010100000000000000000 R
b10001011010100000000000000000 r
b10100 1
b10100 U
b10100 X
b10010 !"
b10100 )
b10100 @
b10100 S
b10100 $
b10100 B
b10100 V
b10100 q
b10000 <
b10000 Q
b10000 p
1=
#60
0=
#65
1*
b0 ,
b0 b
0T
b1111 :
b1111 E
b1111 F
b0 (
b0 G
b0 Z
b0 9
b0 I
b0 M
b0 a
b0 g
b100000000000100 "
b100000000000100 A
b100000000000100 j
b1 +
b1 _
b1 h
b11 ;
b11 D
b11 s
07
b1111 t
b1000100000000000100 5
b1000100000000000100 L
b1000100000000000100 W
b1000100000000000100 #
b1000100000000000100 K
b1000100000000000100 m
b10001000000000001 l
b1 C
b0 /
b0 N
b0 [
b0 d
b1 f
b0 0
b0 H
b0 c
b0 e
b1000000000001 !
b1000000000001 \
b1000000000001 k
b1000000000001 o
b1000000000001 n
b1 ^
b10 ]
b11000 %
b11000 Y
b111100000000010001000000000001 '
b111100000000010001000000000001 R
b111100000000010001000000000001 r
b11000 1
b11000 U
b11000 X
b100000000011100 )
b100000000011100 @
b100000000011100 S
b11000 $
b11000 B
b11000 V
b11000 q
b10100 <
b10100 Q
b10100 p
1=
#70
0=
#75
b10000010000100 "
b10000010000100 A
b10000010000100 j
1-
1.
b10 ;
b10 D
b10 s
b0 t
b100000000010000010000100 5
b100000000010000010000100 L
b100000000010000010000100 W
b100000000010000010000100 #
b100000000010000010000100 K
b100000000010000010000100 m
b1000000000100000100001 l
b100001 C
b0 f
b1 e
b100000100001 !
b100000100001 \
b100000100001 k
b100000100001 o
b100000100001 n
b0 ^
b1 ]
b11100 %
b11100 Y
b1000000000100000100001 '
b1000000000100000100001 R
b1000000000100000100001 r
b11100 1
b11100 U
b11100 X
b10000010100000 )
b10000010100000 @
b10000010100000 S
b11100 $
b11100 B
b11100 V
b11100 q
b11000 <
b11000 Q
b11000 p
1=
#80
0=
#85
0*
b100 9
b100 I
b100 M
b100 a
b100 g
b10 :
b10 E
b10 F
b100 (
b100 G
b100 Z
b10000 "
b10000 A
b10000 j
b1011 +
b1011 _
b1011 h
14
12
18
b0 ;
b0 D
b0 s
1-
0.
b100011 t
b101011000000000000010000 5
b101011000000000000010000 L
b101011000000000000010000 W
b101011000000000000010000 #
b101011000000000000010000 K
b101011000000000000010000 m
b1010110000000000000100 l
b100 C
b10010 /
b10010 N
b10010 [
b10010 d
b1011 f
b100 !
b100 \
b100 k
b100 o
b100 n
b1011 ^
b0 ]
b100000 %
b100000 Y
b10001100001010110000000000000100 '
b10001100001010110000000000000100 R
b10001100001010110000000000000100 r
b100000 1
b100000 U
b100000 X
b0 v
b110000 )
b110000 @
b110000 S
b100000 $
b100000 B
b100000 V
b100000 q
b11100 <
b11100 Q
b11100 p
1=
#90
0=
#95
b1100 +
b1100 _
b1100 h
b11111111111111111111111111111110 ,
b11111111111111111111111111111110 b
b110 :
b110 E
b110 F
b11111111111111111111111111111110 9
b11111111111111111111111111111110 I
b11111111111111111111111111111110 M
b11111111111111111111111111111110 a
b11111111111111111111111111111110 g
b11000000010001000 "
b11000000010001000 A
b11000000010001000 j
1.
b10 ;
b10 D
b10 s
04
1-
02
08
b0 t
b100001011011000000010001000 5
b100001011011000000010001000 L
b100001011011000000010001000 W
b100001011011000000010001000 #
b100001011011000000010001000 K
b100001011011000000010001000 m
b1000010110110000000100010 l
b100010 C
b10 0
b10 H
b10 c
b1000 e
b110000000100010 !
b110000000100010 \
b110000000100010 k
b110000000100010 o
b110000000100010 n
b1100 ]
b100100 %
b100100 Y
b1000010110110000000100010 '
b1000010110110000000100010 R
b1000010110110000000100010 r
b100100 1
b100100 U
b100100 X
b100 ""
b100 /
b100 N
b100 [
b100 d
b11000000010101100 )
b11000000010101100 @
b11000000010101100 S
b100100 $
b100100 B
b100100 V
b100100 q
b100000 <
b100000 Q
b100000 p
1=
#100
0=
#105
1*
b0 ,
b0 b
b10 :
b10 E
b10 F
b0 (
b0 G
b0 Z
b0 9
b0 I
b0 M
b0 a
b0 g
b101100 "
b101100 A
b101100 j
b10000 +
b10000 _
b10000 h
16
b0 ;
b0 D
b0 s
0-
0.
b10 t
b10000000000000000101100 5
b10000000000000000101100 L
b10000000000000000101100 W
b10000000000000000101100 #
b10000000000000000101100 K
b10000000000000000101100 m
b100000000000000001011 l
b1011 C
b0 /
b0 N
b0 [
b0 d
b10000 f
b0 0
b0 H
b0 c
b0 e
b1011 !
b1011 \
b1011 k
b1011 o
b1011 n
b10000 ^
b0 ]
b10000000000000000101100 %
b10000000000000000101100 Y
b1000000100000000000000001011 '
b1000000100000000000000001011 R
b1000000100000000000000001011 r
b101000 1
b101000 U
b101000 X
b11111111111111111111111111111110 #"
b1010100 )
b1010100 @
b1010100 S
b101000 $
b101000 B
b101000 V
b101000 q
b100100 <
b100100 Q
b100100 p
1=
#110
0=
#115
1*
b0 ,
b0 b
b10000000000000000110000 %
b10000000000000000110000 Y
b111 :
b111 E
b111 F
b10000 (
b10000 G
b10000 Z
b0 9
b0 I
b0 M
b0 a
b0 g
b10110000010101000 "
b10110000010101000 A
b10110000010101000 j
b1011 +
b1011 _
b1011 h
1-
1.
b10 ;
b10 D
b10 s
06
b0 t
b110001001010110000010101000 5
b110001001010110000010101000 L
b110001001010110000010101000 W
b110001001010110000010101000 #
b110001001010110000010101000 K
b110001001010110000010101000 m
b1100010010101100000101010 l
b101010 C
b10000 /
b10000 N
b10000 [
b10000 d
b1001 f
b11111111111111111111111111111110 0
b11111111111111111111111111111110 H
b11111111111111111111111111111110 c
b1100 e
b101100000101010 !
b101100000101010 \
b101100000101010 k
b101100000101010 o
b101100000101010 n
b1001 ^
b1011 ]
b1100010010101100000101010 '
b1100010010101100000101010 R
b1100010010101100000101010 r
b10000000000000000110000 1
b10000000000000000110000 U
b10000000000000000110000 X
b10000010110000011011000 )
b10000010110000011011000 @
b10000010110000011011000 S
b10000000000000000110000 $
b10000000000000000110000 B
b10000000000000000110000 V
b10000000000000000110000 q
b10000000000000000101100 <
b10000000000000000101100 Q
b10000000000000000101100 p
1=
#120
0=
#125
1*
b0 ,
b0 b
b1111 :
b1111 E
b1111 F
bx (
bx G
bx Z
b0 9
b0 I
b0 M
b0 a
b0 g
bx00 "
bx00 A
bx00 j
bx +
bx _
bx h
b11 ;
b11 D
b11 s
0-
0.
bx t
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 5
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 L
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 W
bx00 #
bx00 K
bx00 m
bx l
bx C
bx /
bx N
bx [
bx d
bx f
bx 0
bx H
bx c
bx e
bx !
bx \
bx k
bx o
bx n
bx ^
bx ]
b10000000000000000110100 %
b10000000000000000110100 Y
bx '
bx R
bx r
b10000000000000000110100 1
b10000000000000000110100 U
b10000000000000000110100 X
b0 ""
bx )
bx @
bx S
b10000000000000000110100 $
b10000000000000000110100 B
b10000000000000000110100 V
b10000000000000000110100 q
b10000000000000000110000 <
b10000000000000000110000 Q
b10000000000000000110000 p
1=
